{"version":3,"sources":["Components/Home.js","Components/Buttons/StartGameBtn.js","Components/Board/Players.js","Components/Messages/Message.js","Components/Board/Target.js","Components/Messages/Podium.js","Components/Messages/ScoreTable.js","Components/Board/Shots.js","Components/Board/ManagerBoard1.js","Components/Buttons/CreateGameBtn.js","Components/Forms/SignUpForm.js","Components/Board/Plane.js","Components/Board/TargetTransperent.js","Components/Board/Shot.js","Components/Board/PlayerBoard.js","Components/Forms/SignUpFormUser.js","App.js","serviceWorker.js","js/api.js","js/store/GameStore.js","index.js","images/classroom.png","pictures/teacher_transparent.jpg"],"names":["Home","react_default","a","createElement","className","src","Classroom","alt","Component","StartGameBtn","inject","observer","startGame","_this","props","onClick","this","Players","getUsers","store","users","map","user","name","id","Message","toggleShowMe","showMe","class","content","observable","Target","Podium","shots","length","userName","ScoreTable","s","index","key","score","Shots","clasName","shot","style","position","top","y","left","x","backgroundColor","sleep","ms","Promise","resolve","setTimeout","library","add","faArrowAltCircleRight","ManagerBoard1","messageGo","gameState","showBtn","Buttons_StartGameBtn","showReady","Messages_Message","showGo","showTarget","Board_Target","showGameEnd","showGetShot","showReadyNext","showGameOver","showPrePodium","showScore","Messages_ScoreTable","showPodium","Messages_Podium","showShot","Board_Shots","socket","on","console","log","ManagerBoard1_LinkToCopy","Board_Players","action","_callee","regenerator_default","wrap","_context","prev","next","_this2","abrupt","updateGameStatus","clearShots","stop","LinkToCopy","react_fontawesome_index_es","icon","CreateGameBtn","createGame","Link","to","Board_ManagerBoard1","SignUpForm","onSubmit","event","preventDefault","type","placeholder","value","SignUpForm_Image","Buttons_CreateGameBtn","Image","_ref","faPaperPlane","Plane","allStores","addPlayerIconPos","checkStartPoint","managePlay","clientEnd","onTouchStart","start","onTouchEnd","end","rect","ReactDOM","findDOMNode","getBoundingClientRect","sent","iconPos","e","_this3","clientStart","touches","clientX","clientY","_this4","changedTouches","concat","TargetTransperent","addTargerPos","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initializerDefineProperty","TargetTransperent_descriptor","assertThisInitialized","divPos","Shot","getShotX","getShotY","background","PlayerBoard","componentDidMount","gameManage","showPlane","Board_Plane","Board_TargetTransperent","Board_Shot","SignUpFormUser","SignUpFormUser_descriptor","SignUpFormUser_descriptor2","handleChange","target","window","innerHeight","innerWidth","alert","setState","mobileView","addUser","state","onChange","SignUpFormUser_Image","Board_PlayerBoard","App","response","input","callApi","body","axios","get","data","status","Error","message","then","res","express","catch","err","BrowserRouter","App_Navbar","Route","path","exact","render","Components_Home","Forms_SignUpForm","Forms_SignUpFormUser","Navbar","Boolean","location","hostname","match","openSocket","GameStore","GameStore_descriptor","GameStore_descriptor2","GameStore_descriptor3","GameStore_descriptor4","GameStore_descriptor5","GameStore_descriptor6","GameStore_descriptor7","GameStore_descriptor8","GameStore_descriptor9","GameStore_descriptor10","GameStore_descriptor11","GameStore_descriptor12","GameStore_descriptor13","GameStore_descriptor14","_descriptor15","getGameProperty","msg","cb","properties","emit","d","push","sort","b","distance","addScore","objectSpread","xSum","Math","pow","ySum","distanceCalc","sqrt","unit","i","startPoint","x1","y1","playerIcon","_this5","addShot","addDistance","_this6","computed","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e5219b06.chunk.js","sourcesContent":["// import {observer, inject} from 'mobx-react';\r\n// import {observable} from 'mobx';\r\nimport React, { Component } from 'react';\r\nimport Classroom from '.././images/classroom.png'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"app-header\">Swipe it up </div>\r\n                <img className=\"classroom\" src={Classroom} alt=\"classroom\"></img>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Home;","import { observer, inject } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass StartGameBtn extends Component {\r\n  startGame = () => {\r\n    this.props.onClick();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"start-game-btn\" onClick={this.startGame}>\r\n        start game\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default StartGameBtn;","import { observer, inject } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Players extends Component {\r\n\r\n  getUsers = () => {\r\n    if (!this.props.store.users) {\r\n      return (<div></div>)\r\n    }\r\n    let users = this.props.store.users;\r\n    return (users.map(user => { return (<div>{user.name}</div>) }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"players\">\r\n        <span id=\"players-header\">players online:</span><div>\r\n          {this.getUsers()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Players;","import { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport React, { Component } from 'react';\r\n\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Message extends Component {\r\n\r\n  @observable showMe = true;\r\n\r\n  toggleShowMe = () => {\r\n    this.showMe = false;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.class}>\r\n        {this.props.content}\r\n      </div>)\r\n  }\r\n}\r\nexport default Message;","import {observer, inject} from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport pic from '../../pictures/teacher_transparent.jpg';\r\n\r\n\r\n\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Target extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"target\"></div>\r\n      );\r\n    }\r\n  }\r\n  export default Target;","import { observer, inject } from 'mobx-react';\r\n// import {autorun, reaction, intercept} from 'mobx';\r\nimport { observable } from 'mobx';\r\nimport React, { Component } from 'react';\r\nimport { setInterval, setTimeout } from 'timers';\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Podium extends Component {\r\n    render (){\r\n        if (this.props.store.shots.length===0){\r\n            return (<div><div className=\"podium\">\r\n            <div className=\"first-place\"></div>\r\n            <div className=\"second-place\"></div>\r\n            <div className=\"third-place\"></div>\r\n            </div></div>)\r\n        }\r\n        else if (this.props.store.shots.length === 1) {\r\n            return (<div className=\"podium\">\r\n                <div className=\"first-place\">{this.props.store.shots[0].userName}</div>\r\n            </div>)\r\n        }\r\n        else if (this.props.store.shots.length === 2) {\r\n            return (\r\n                <div className=\"podium\">\r\n                    <div className=\"first-place\">{this.props.store.shots[0].userName}</div>\r\n                    <div className=\"second-place\">{this.props.store.shots[1].userName}</div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"podium\">\r\n                <div className=\"first-place\">{this.props.store.shots[0].userName}</div>\r\n                <div className=\"second-place\">{this.props.store.shots[1].userName}</div>\r\n                <div className=\"third-place\">{this.props.store.shots[2].userName}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Podium; ","import {observer, inject} from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass ScoreTable extends Component {\r\n  render() {\r\n    let shots = this.props.store.shots;\r\n    if(!shots){\r\n      return;\r\n    }\r\n    return (\r\n      <div className=\"score-table\" >ScoreTable\r\n      <div className=\"score-table-headline\">\r\n        <div className=\"score-table-headline-item\">Place</div>\r\n        <div className=\"score-table-headline-item\">Name</div>\r\n        <div className=\"score-table-headline-item\">Score</div>\r\n      </div>\r\n      {shots.map( (s, index) => {\r\n        return (<div className=\"score-table-record\" key={s.userName+index}>\r\n        <div className=\"score-table-item\">{index+1}</div>\r\n        <div className=\"score-table-item\">{s.userName}</div>\r\n        <div className=\"score-table-item\">{s.score}</div>\r\n          </div>)\r\n        })}\r\n        </div>)\r\n      }\r\n    }\r\n    export default ScoreTable;","import {observer, inject} from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Shots extends Component {\r\n  render() {\r\n    return (\r\n      <div clasName=\"shots\">\r\n      {this.props.store.shots.map(shot => {\r\n        return (\r\n          <div className='shot' \r\n          style={{position: 'absolute', top:shot.y, left:shot.x, backgroundColor:'red'}}>{shot.userName}</div>          \r\n          )\r\n        })}\r\n        </div>\r\n        )\r\n      }\r\n      \r\n    }  \r\n    export default Shots;","import { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport React, { Component } from 'react';\r\nimport StartGameBtn from '../Buttons/StartGameBtn';\r\nimport Players from './Players';\r\nimport Message from '../Messages/Message';\r\nimport Target from \"./Target\"\r\nimport Podium from \"../Messages/Podium\"\r\nimport ScoreTable from \"../Messages/ScoreTable\"\r\n// import Shot from \"../Board/Shot\"\r\nimport Shots from \"../Board/Shots\"\r\n\r\nimport { setInterval, setTimeout } from 'timers';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(faArrowAltCircleRight)\r\n\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));//resolve reject \r\n}//return promise not should be async\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass ManagerBoard1 extends Component {\r\n\r\n  @observable showMe = true;\r\n  @observable showReady = true;\r\n  @observable showGo = false;\r\n  @observable showTarget = false;\r\n  @observable showGameEnd = false;\r\n  @observable showGetShot = false;\r\n  @observable showReadyNext = false;\r\n  @observable showGameOver = false;\r\n  @observable showPrePodium = false;\r\n  @observable showScore = false;\r\n  @observable showPodium = false;\r\n  @observable showBtn = false;\r\n  @observable showShot = false;\r\n  \r\n  \r\n  componentDidMount () {\r\n    this.props.store.socket.on('update state', () => { //from server\r\n      console.log('update state');\r\n    });\r\n\r\n  }\r\n\r\n  @action startGame = async () => {\r\n    if (this.props.store.gameState === 'starting') {\r\n      return;\r\n    }\r\n    console.log('startGame');\r\n    this.props.store.updateGameStatus('starting');\r\n    this.props.store.clearShots();\r\n    this.showMe = false;\r\n    \r\n    this.showReady = true;\r\n    await sleep(1000);\r\n    this.showReady = false;\r\n    this.showGo = true;\r\n    await sleep(1000);\r\n    this.showGo = false;\r\n    this.showTarget = true;\r\n    await sleep(4000);\r\n    this.showTarget = false;\r\n    this.showGameEnd = true;\r\n    await sleep(2000);\r\n    this.showGameEnd = false;\r\n    this.showGetShot = true;\r\n    await sleep(2000);\r\n    this.showGetShot = false;\r\n    this.showTarget = true;\r\n    this.showShot = true;\r\n    await sleep(5000);\r\n    this.showShot = false;\r\n    this.showTarget = false;\r\n    // this.showReadyNext = true;\r\n    // await sleep(3000);\r\n    // this.showReadyNext = false;\r\n    this.showGameOver = true;\r\n    await sleep(2000);\r\n    this.showGameOver = false;\r\n    this.showPrePodium = true;\r\n    await sleep(5000);\r\n    this.showPrePodium = false;\r\n    this.showScore = true;\r\n    await sleep(5000);\r\n    this.showScore = false;\r\n    this.showPodium = true;\r\n    await sleep(3000);\r\n    this.showPodium = false;\r\n    \r\n    \r\n    \r\n    this.props.store.updateGameStatus('pending');\r\n    this.showMe = true;\r\n  }\r\n  \r\n  messageGo = () => {\r\n    return (\r\n      <div className=\"mng-board\">\r\n      <div className=\"game-status\">Game status:<br/>{this.props.store.gameState}</div>\r\n      {this.showBtn&&<StartGameBtn onClick={this.startGame}/>}\r\n      {this.showReady&&<Message content='Ready?!? 1,2,3' class='ready-message'/>}\r\n      {this.showGo&&<Message content='Go' class='go-message'/>}\r\n      {this.showTarget&&<Target/>}\r\n      {this.showGameEnd&&<Message content='Time Is Up!' class='game-end-message'/>}\r\n      {this.showGetShot&&<Message content='Wanna See Your Shot?' class='message-shot'/>}\r\n      {this.showReadyNext&&<Message content='Get ready for the next one!!!' class='ready-message'/>}\r\n      {this.showGameOver&&<Message content='Game Over!!!' class='game-end-message'/>}\r\n      {this.showPrePodium&&<Message content=\"Let's See Who Won!\" class='message-shot'/>}\r\n      {this.showScore&&<ScoreTable/>}\r\n      {this.showPodium&&<Podium/>}\r\n      {this.showShot&&<Shots/>}\r\n      </div>)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.showMe ? (\r\n        <div className=\"mng-board\">\r\n          <LinkToCopy />\r\n          <Players />\r\n          {/* <Podium/> */}\r\n          <StartGameBtn onClick={this.startGame} />\r\n          <div className=\"game-status\">Game status:<br />{this.props.store.gameState}</div>\r\n    \r\n        </div>\r\n      ) : (this.messageGo()));\r\n  }\r\n}\r\n\r\nconst LinkToCopy = () => {\r\n  return (\r\n    <div className='url-title'>\r\n      <span>Copy Link</span>\r\n      <FontAwesomeIcon className=\"arrow-icon\" icon=\"arrow-alt-circle-right\" />\r\n      <span id=\"url-str\">http://localhost:3000/user</span>\r\n      <FontAwesomeIcon className=\"arrow-icon\" icon=\"arrow-alt-circle-right\" />\r\n      <span>send to your players</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ManagerBoard1;","import { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport StartGameBtn from './StartGameBtn';\r\nimport ManagerBoard1 from '../Board/ManagerBoard1';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass CreateGameBtn extends Component {\r\n\r\n  @observable showMe = true\r\n\r\n  createGame = () => {\r\n    this.showMe = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.showMe ?\r\n        (\r\n          <div className=\"create-game-btn\" onClick={this.createGame}>\r\n            <Link id=\"link-to-game\" to=\"/Game\">Create Game</Link>\r\n          </div>\r\n        )\r\n        : (<ManagerBoard1 />)\r\n    )\r\n  }\r\n}\r\nexport default CreateGameBtn;","import { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport React, { Component } from 'react';\r\nimport CreateGameBtn from '../Buttons/CreateGameBtn';\r\nimport Classroom from '../../images/classroom.png'\r\n\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass SignUpForm extends Component {\r\n\r\n  @observable showMe = true\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.showMe = false;\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.showMe ? (\r\n        <div>\r\n          <form className=\"form\" onSubmit={this.onSubmit}>\r\n            <label>\r\n              <span className=\"sign-header\">name:</span><input className=\"input\" type=\"text\" name=\"name\" placeholder={\"add your name\"} />\r\n            </label>\r\n            <input className=\"signBtn\" type=\"submit\" value=\"sign up\" />\r\n          </form>\r\n          <Image src={Classroom} />\r\n        </div>\r\n      ) :\r\n        <div>\r\n          <CreateGameBtn className=\"create-game-btn\"/>\r\n          <Image src={Classroom} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Image = ({ src }) => {\r\n  return (\r\n    <img className=\"classroom\" src={src} alt=\"classroom\"></img>\r\n  )\r\n}\r\n\r\nexport default SignUpForm;","import React, { Component } from 'react';\r\nimport { action, observable } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport ReactDOM from 'react-dom';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(faPaperPlane)\r\n\r\n\r\n@inject(allStores => ({\r\n    addPlayerIconPos: allStores.store.addPlayerIconPos,\r\n    checkStartPoint: allStores.store.checkStartPoint,\r\n    managePlay: allStores.store.managePlay\r\n    \r\n}))\r\n@observer\r\nclass Plane extends Component {\r\n    \r\n    @observable iconPos = { x: \"\", y: \"\" };\r\n    @observable clientStart = { x: \"\", y: \"\" }\r\n    @observable clientEnd = { x: \"\", y: \"\" };\r\n    @observable distance = null;\r\n    \r\n    @action componentDidMount = async () => {\r\n        let rect = await ReactDOM.findDOMNode(this).getBoundingClientRect();\r\n        this.iconPos.x = rect.x + 35 //finding the div's center\r\n        this.iconPos.y = rect.y + 35 //finding the div's center\r\n        //console.log(this.iconPos.x, this.iconPos.y);\r\n        //console.log('componentDidMount');\r\n        this.props.addPlayerIconPos(this.iconPos.x, this.iconPos.y); //send to store\r\n    }\r\n    \r\n    @action start = (e) => {\r\n        this.clientStart.x = e.touches[0].clientX; //where the player's first touch on screen\r\n        this.clientStart.y = e.touches[0].clientY;\r\n        // console.log( `start x:${this.clientStart.x} y:${this.clientStart.y}`)\r\n        this.props.checkStartPoint(this.clientStart.x, this.clientStart.y) //send to store\r\n    }\r\n    \r\n    @action end = (e) => {\r\n        //e.preventDefault();\r\n        this.clientEnd.x = e.changedTouches[0].clientX;\r\n        this.clientEnd.y = e.changedTouches[0].clientY;\r\n        console.log( `end x:${this.clientEnd.x} y:${this.clientEnd.y}`);\r\n        this.props.managePlay(this.clientEnd.x, this.clientEnd.y)\r\n        //sending shot's (x,y) to the store\r\n    }\r\n    \r\n\r\n    render() {\r\n        //console.log( `Clientend x:${this.clientEnd.x} y:${this.clientEnd.y}`);\r\n        var left = this.clientEnd.x + 'px';\r\n        var top = this.clientEnd.y + 'px';\r\n        return (\r\n            <FontAwesomeIcon \r\n            onTouchStart={this.start}  \r\n            onTouchEnd={this.end}  \r\n            className=\"plane\" icon=\"paper-plane\" \r\n            style={{position: 'absolute', left, top}}\r\n            />\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default Plane;","import { observer, inject } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n// import Plane from '../../images/paper_plane_red.svg'\r\nimport ReactDOM from 'react-dom';\r\nimport { observable } from 'mobx';\r\n\r\n\r\n\r\n@inject(allStores => ({\r\n    addTargerPos: allStores.store.addTargerPos\r\n})) \r\n@observer\r\nclass TargetTransperent extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    @observable divPos = { x: \"\", y: \"\" };\r\n\r\n\r\n    componentDidMount() {\r\n        let rect = ReactDOM.findDOMNode(this)\r\n            .getBoundingClientRect()\r\n        console.log(rect.x, rect.y)\r\n        this.divPos.x = rect.x + 50 //finding the div's center\r\n        this.divPos.y = rect.y + 25 //finding the div's center\r\n        console.log(this.divPos.x, this.divPos.y)\r\n        this.props.addTargerPos(this.divPos.x, this.divPos.y);\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"targetTransperent\">\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TargetTransperent;","import { observer, inject } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Shot extends Component {\r\n\r\n  render() {\r\n    console.log('render of shot');\r\n    let left = this.props.store.getShotX + 'px';\r\n    let top = this.props.store.getShotY + 'px';\r\n    console.log(\"top\" + top);\r\n    console.log(\"left\" + left);\r\n    return (\r\n      <div className=\"shot\" style={{ position: 'absolute', top, left, backgroundColor: this.background }}>\r\n        {this.props.store.userName}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Shot;","import {observer, inject} from 'mobx-react';\r\nimport {observable, autorun} from 'mobx';\r\nimport React, { Component } from 'react';\r\nimport Message  from '../Messages/Message';\r\nimport Plane from '../Board/Plane';\r\nimport Target from '../Board/Target';\r\nimport TargetTransperent from '../Board/TargetTransperent';\r\nimport Podium from '../Messages/Podium';\r\nimport Shot from '../Board/Shot';\r\nimport Score from '../Messages/ScoreTable';\r\n\r\nfunction sleep(ms) { \r\n  return new Promise(resolve => setTimeout(resolve, ms));//resolve reject \r\n}//return promise not should be async\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass PlayerBoard extends Component {\r\n  \r\n  @observable showMe = true;\r\n  @observable showReady = false;\r\n  @observable showGo = false;\r\n  @observable showPlane = false;\r\n  @observable showTarget = false;\r\n  @observable showGameEnd = false;\r\n  @observable showGetShot = false;\r\n  @observable showReadyNext = false;\r\n  @observable showGameOver = false;\r\n  @observable showPrePodium = false;\r\n  @observable showPodium = false;\r\n  @observable showShot = false;\r\n  @observable showScore = false;\r\n  \r\n  componentDidMount = () => {\r\n    this.props.store.socket.on('update state', () => { //from server\r\n      this.gameManage();\r\n    });\r\n  }\r\n  \r\n  gameManage = async () => {\r\n    this.showMe = false;\r\n    if(this.props.store.gameState==='pending') {\r\n      return;\r\n    }\r\n    this.showReady = true;\r\n    await sleep(1000);\r\n    this.showReady = false;\r\n    this.showGo = true;\r\n    await sleep(1000);\r\n    this.showGo = false;\r\n    this.showPlane = true;\r\n    await sleep(4000);\r\n    this.showPlane = false;\r\n    this.showGameEnd = true;\r\n    await sleep(2000);\r\n    this.showGameEnd = false;\r\n    this.showGetShot = true;\r\n    await sleep(2000);\r\n    this.showGetShot = false;\r\n    this.showTarget = true;\r\n    this.showShot = true;\r\n    await sleep(5000);\r\n    this.showTarget = false;\r\n    this.showShot = false;\r\n    // this.showReadyNext = true;\r\n    // await sleep(3000);\r\n    // this.showReadyNext = false;\r\n    this.showGameOver = true;\r\n    await sleep(2000);\r\n    this.showGameOver = false;\r\n    this.showPrePodium = true;\r\n    await sleep(5000);\r\n    this.showPrePodium = false;\r\n    this.showScore = true;\r\n    await sleep(5000);\r\n    this.showScore = false;\r\n    this.showPodium = true;\r\n    await sleep(3000);\r\n    this.showPodium = false;    \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"mng-board\">\r\n      {this.showReady&&<Message content='Ready?!? 1,2,3' class='ready-message'/>}\r\n      {this.showGo&&<Message content='Go' class='go-message'/>}\r\n      {this.showPlane&&<Plane/>}\r\n      {this.showPlane&&<TargetTransperent/>}\r\n      {this.showTarget&&<Target/>}\r\n      {this.showShot&&<Shot/>}\r\n      {this.showScore&&<Score/>}\r\n      {this.showGameEnd&&<Message content='Time Is Up!' class='game-end-message'/>}\r\n      {this.showGetShot&&<Message content='Wanna See Your Shot?' class='message-shot'/>}\r\n      {this.showReadyNext&&<Message content='Get Ready For The Next One!!!' class='ready-message'/>}\r\n      {this.showGameOver&&<Message content='Game Over!!!' class='game-end-message'/>}\r\n      {this.showPrePodium&&<Message content=\"Let's See Who Won!\" class='message-shot'/>}\r\n      {this.showPodium&&<Podium/>}  \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  export default PlayerBoard;","import { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport React, { Component } from 'react';\r\nimport PlayerBoard from '../Board/PlayerBoard';\r\nimport Classroom from '../../images/classroom.png'\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass SignUpFormUser extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {mobileView:false};\r\n  }\r\n\r\n  @observable showMe = true\r\n  @observable name = ''\r\n\r\n  handleChange = (event) => {\r\n    this.name = event.target.value;\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    if(!this.name) {\r\n      alert(\"Please add your name to start playing\");\r\n      return;\r\n    }\r\n    if(window.innerHeight > window.innerWidth){\r\n      alert(\"Please use Landscape and then continue\");\r\n    }\r\n    else{\r\n      // alert(\"Youre good!!\");\r\n      this.setState({\r\n        mobileView:true\r\n      });\r\n\r\n    event.preventDefault()\r\n    this.props.store.addUser(this.name); //add user to the list of users\r\n    this.props.store.userName = this.name; // add current user\r\n    //i/o to DB\r\n    this.showMe = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    // if (!this.state.mobileView) {\r\n    //   return(\r\n    //     <div>Change your direction</div>\r\n    //   )\r\n    // } \r\n\r\n    return (\r\n      this.showMe ? (\r\n        <div>\r\n        <form className=\"form\" onSubmit={this.onSubmit}>\r\n            <label>\r\n              <span className=\"sign-header\">name:</span><input className=\"input\" type=\"text\" onChange={this.handleChange} placeholder={\"add your name\"} name=\"name\" value={this.name} />\r\n            </label>\r\n            <input className=\"signBtn\" type=\"submit\" value=\"sign up\" />\r\n          </form>\r\n          <Image src={Classroom}/>\r\n        </div>\r\n        ) :\r\n        <PlayerBoard />\r\n    );\r\n  }\r\n}\r\n\r\nconst Image = ({src}) => {\r\n  return (\r\n    <img className=\"classroom\" src={src} alt=\"classroom\"></img>\r\n  )\r\n}\r\n\r\nexport default SignUpFormUser;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { observer, inject } from 'mobx-react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Home from './Components/Home';\r\nimport SignUpForm from './Components/Forms/SignUpForm';\r\nimport ManagerBoard1 from './Components/Board/ManagerBoard1';\r\nimport SignUpFormUser from './Components/Forms/SignUpFormUser';\r\nimport Classroom from './images/classroom.png'\r\n\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    input: '',\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await axios.get('/api/hello');\r\n    const body = await response.data;\r\n\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    console.log(\"res:\" + this.state.response);\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Route path=\"/\" exact render={() => ( <Home src={Classroom}/>)} />\r\n          <Route path=\"/Register\" exact render={() => (<SignUpForm src={Classroom} />)} />\r\n          <Route path=\"/Game\" exact render={() => (<ManagerBoard1 src={Classroom} />)} />\r\n          <Route path=\"/User\" exact render={() => (<SignUpFormUser src={Classroom} />)} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Link className=\"nav-item\" to=\"/\" >home</Link>\r\n      <Link className=\"nav-item\" to=\"/Register\">sign up</Link>\r\n      <Link className=\"nav-item\" to=\"/credits\">credits</Link>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import openSocket from 'socket.io-client';\r\nconst socket = openSocket('http://localhost:5000');\r\n\r\n//socket.on('chat message', (d) => {console.log(`msg: ${d}`)}); // from server\r\n\r\n// in disconnenct - due to to reconnect retry + re-connect\r\n// accumulate  stay the same object socket so it keeps the same\r\n// disconnect and reconnect will have the same handlers \r\n// will stay connect and than in reconnect i will have the same \r\n//handlers again and again and so on\r\n// relevant only to users    \r\n\r\nfunction subscribeToTimer(cb) {\r\n  socket.on('subscribeToTimer', timestamp => cb(null, timestamp));\r\n  socket.emit('subscribeToTimer', 1000);\r\n}\r\n\r\nfunction chatMessage(msg, cb) {\r\n  //socket.emit('chat message', msg); //to server\r\n}\r\n\r\n\r\nfunction newUserJoin(msg, cb) {\r\n  socket.emit('new user', msg); //to server\r\n  socket.on('new user', d => cb(null, d)); // from server\r\n}\r\n\r\nfunction updateGameStatus(status, cb) {\r\n  socket.emit('update state', status); //to server\r\n  socket.on('update state', d => cb(null, d)); // from server\r\n}\r\n\r\nfunction gameProperties(msg, cb) {\r\n  socket.emit('game properties', msg); //to server\r\n  socket.on('game properties', d => cb(null, d)); // from server\r\n}\r\n\r\n\r\nexport { subscribeToTimer, chatMessage , newUserJoin ,gameProperties, updateGameStatus, socket };","import { observable, autorun, computed, action} from \"mobx\";\r\nimport { gameProperties, updateGameStatus } from '../api';\r\nimport openSocket from 'socket.io-client';\r\n\r\nclass GameStore {\r\n    @observable userName = '';\r\n    @observable gameState = 'pending';\r\n    @observable games = [];\r\n    @observable users = [];\r\n    @observable msg = '';\r\n    @observable target = {} //should get the target (x,y)\r\n    @observable shot = {userName:this.userName, startPoint: false, x: 150, y: 150, distance:0, score:0 } \r\n    @observable shots = [] //array of all shots  \r\n    @observable playerIcon = {};//should get the player's icon (x,y)\r\n    @observable score = {};//should get the player's icon (x,y)\r\n    \r\n    socket = openSocket('http://localhost:5000');\r\n    \r\n    constructor() {\r\n        this.socket.on('chat message', (d) => { //from server\r\n            this.msg = d;\r\n        }); \r\n        this.socket.on('update state', (state) => { //from server\r\n            this.gameState = state;\r\n        });\r\n        this.socket.on('new user', (user) => { //from server\r\n            this.users = user;\r\n        });\r\n        \r\n        this.socket.on('remove shots', () => { //from server\r\n            this.shots = [];\r\n        }); \r\n        \r\n        this.socket.on('user shot', (shot)=>{\r\n            this.shots.push(shot);\r\n            this.shots.sort((a, b)=>{return a.distance - b.distance});//sort before insert    \r\n            this.addScore();\r\n        }); // from server\r\n    }\r\n    \r\n    @action addTargerPos = (x1, y1) => {\r\n        this.target['x'] = x1;\r\n        this.target['y'] = y1;\r\n    } //get the targetDiv's (x,y) from TargetTransperent component\r\n    \r\n    @action addPlayerIconPos = (x1, y1) => {\r\n        this.playerIcon['x'] = x1;\r\n        this.playerIcon['y'] = y1;\r\n        // console.log('addPlayerIconPos'+'x:'+ this.playerIcon.x+ 'y:'+ this.playerIcon.y);\r\n    }\r\n    \r\n    //check if player touched close to the startIcon or not (icon size = 50px)\r\n    @action checkStartPoint = (x, y) => {\r\n        if ( (x <= this.playerIcon.x + 70) && (y <= this.playerIcon.y + 70) ) {\r\n            this.shot.startPoint = true;\r\n            return;\r\n        } \r\n        this.shot.startPoint = false;\r\n        return;\r\n    }\r\n    \r\n    @action managePlay = (x,y) => {\r\n        this.addShot(x,y);\r\n        this.addDistance();\r\n        this.socket.emit('user shot', this.shot); //to server\r\n    }\r\n    \r\n    @action addShot = (x1, y1) => {\r\n        this.shot = {...this.shot,x:x1,y:y1,userName:this.userName};\r\n        console.log('add shot:'+'x:'+this.shot['x']+'y:'+this.shot['y']);\r\n    } //get the shot's (x,y) from Dart component\r\n    \r\n    @computed get getShotX()  {\r\n        return this.shot.x; \r\n    }\r\n    \r\n    @computed get getShotY() {\r\n        return this.shot.y; \r\n    }\r\n    \r\n    @action clearShots() {\r\n        this.socket.emit('remove shots'); //to server\r\n    }\r\n    \r\n    @action addDistance() {\r\n        let target = { ...this.target }\r\n        let shot = { ...this.shot }\r\n        let xSum = Math.pow((target.x - shot.x), 2);\r\n        let ySum = Math.pow((target.y - shot.y), 2);\r\n        let distanceCalc = Math.sqrt(xSum + ySum);\r\n        this.shot = {...this.shot,distance:distanceCalc} \r\n    }\r\n    \r\n    @action addScore() {\r\n        let unit = 100/this.shots.length;\r\n        for(let i in this.shots) {\r\n            if (!this.shots[i].startPoint){\r\n                this.shots[i] = {...this.shots[i], score:0};\r\n            }\r\n            this.shots[i] = {...this.shots[i], score:(unit * (this.shots.length-i))};\r\n        }\r\n    }\r\n    \r\n    getGameProperty = () => {gameProperties('',\r\n    (err, properties) => {\r\n        this.users = properties.users;\r\n        this.gameState = properties.gameState;\r\n    });\r\n}\r\n\r\n\r\naddUser(user) {\r\n    this.socket.emit('new user', user); //to server\r\n}\r\n\r\nchatMessage(msg) {\r\n    this.socket.emit('chat message', msg); //to server\r\n}\r\n\r\nupdateGameStatus(status) {\r\n    this.socket.emit('update state', status); //to server\r\n}\r\n}\r\n\r\nconst store = new GameStore();\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'mobx-react';\r\nimport store from './js/store/GameStore';\r\n\r\nstore.getGameProperty();\r\nconsole.log(store);\r\n\r\nwindow.store = store;\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                <App />\r\n                </Provider>, document.getElementById('root'));\r\n    \r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n    ","module.exports = __webpack_public_path__ + \"static/media/classroom.c4ab1f73.png\";","module.exports = __webpack_public_path__ + \"static/media/teacher_transparent.f5dbe1cc.jpg\";"],"sourceRoot":""}